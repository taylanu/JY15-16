Project 12-3 Instructions:

Design, implement, and test a recursive method that expects a positive integer parameter and returns a string representing that integer with commas in the appropriate places. The method might be called as follows:

	String formattedInt = insertCommas(1000000); //Returns "1,000,000"
(Hint: Recurse by repeated division and build the string by concatenating after each recursive call)

Project 12.3 the book describes a method that given an integer argument, will return a string of that number with commas to represent thousands.  This method better focuses on recursion if written as a void method that only prints the number with commas inserted within.
So, better 12.3 specifications:  write a recursive method that is sent a single integer argument (num), and shows the number with commas inserted to represent thousands.
				public static void showWithCommas(long num)
//continued on next page
The method can be called in a main function like this:
				SOP(Enter a big integer:);
				long num = input.nextLong();		//if user inputs 1234567
				showWithCommas(num);		//program outputs 1,234,567
Once working with numbers without any zero-digits, try to run it with the following input:
				1034007
If the method outputs something silly looking, like 1,34,7 (which is incorrect), consider what needs to be added so that the output is normal numeric notation: 1,034,007.
Hint:  you will be likely be using modulus (%) to find the remainder of the last 3 digits to write after the comma.
If the resulting remainder from modulous is 1 or 2 digits long, java will not represent it with leading zeroes.
Try to use a couple of if-statements to sneak in some extra zeroes after the comma if the remainder is not a 3-digit number.

COMPLETE